plugins {
    id("application")
    id("checkstyle")
    id("com.diffplug.spotless")
    id("com.github.ben-manes.versions")
    id("com.google.cloud.tools.jib")
}

repositories {
    mavenCentral()
    maven { url = "https://repo.spring.io/libs-milestone/" }
}

dependencyLocking {
    lockAllConfigurations()
}

dependencies {
    implementation(platform("org.springframework.boot:spring-boot-dependencies:2.4.+"))
    implementation("de.vandermeer:asciitable:0.+")
    implementation("org.apache.httpcomponents:httpclient")
    implementation("org.jsoup:jsoup:1.+")
    implementation("org.liquibase:liquibase-core")
    implementation("org.postgresql:postgresql")
    implementation("org.springframework.boot:spring-boot-starter-jdbc")
    implementation("org.springframework.boot:spring-boot-starter-oauth2-client")
    implementation("org.springframework.boot:spring-boot-starter-thymeleaf")
    implementation("org.springframework.boot:spring-boot-starter-web")
    implementation("org.springframework.data:spring-data-redis")
    implementation("org.springframework.session:spring-session-data-redis")
    implementation("redis.clients:jedis")

    testImplementation(platform("org.testcontainers:testcontainers-bom:1.+"))
    testImplementation("org.springframework.boot:spring-boot-starter-test")
    testImplementation("org.testcontainers:postgresql")
    testImplementation("org.testcontainers:testcontainers")
}

java {
    sourceCompatibility = JavaVersion.VERSION_11
}

application {
    mainClass = "io.github.vpavic.traintracker.TrainTrackerApplication"
}

test {
    useJUnitPlatform()
}

checkstyle {
    toolVersion = "+"
}

spotless {
    java {
        licenseHeaderFile(rootProject.file("config/spotless/license.java"))
    }
}

dependencyUpdates {
    revision = "release"
    gradleReleaseChannel = "current"
    rejectVersionIf {
        def isStable = { String version ->
            def isStableVersion = (version ==~ /^[0-9,.v-]+(-r)?$/)
            def isStableKeyword = ["RELEASE", "FINAL", "GA"].any({ version.toUpperCase().contains(it) })
            return isStableVersion || isStableKeyword
        }
        isStable(it.currentVersion) && !isStable(it.candidate.version)
    }
}

jib {
    from {
        image = "adoptopenjdk/openjdk11@sha256:cbd20379d141de45148f6e2f2be388f8cbb3a5211eaaa389930a3a80b56d95ee"
    }
}
